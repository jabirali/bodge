#!/usr/bin/env python

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from icecream import ic
from typer import run


def main(filename: str):
    """Plot the results generated by RKKY calculations."""

    raw = pd.read_csv(filename, names=["s1", "s2", "sep", "E"], skipinitialspace=True)
    raw = raw.sort_values(by=["sep", "s1", "s2"])
    ic(raw)

    # μs = []
    # ηs = []
    for δ, df in raw.groupby("sep"):

        def free(s1, s2):
            try:
                return float(df[(df["s1"] == s1) & (df["s2"] == s2)].E)
            except:
                return np.nan

        μ_x = (free("x+", "x+") - free("x-", "x-")) / 4
        μ_y = (free("y+", "y+") - free("y-", "y-")) / 4
        μ_z = (free("z+", "z+") - free("z-", "z-")) / 4
        μ = np.array([μ_x, μ_y, μ_z])

        η_xx = (free("x+", "x+") - free("x+", "x-") - free("x-", "x+") + free("x-", "x-")) / 4
        η_xy = (free("x+", "y+") - free("x+", "y-") - free("x-", "y+") + free("x-", "y-")) / 4
        η_xz = (free("x+", "z+") - free("x+", "z-") - free("x-", "z+") + free("x-", "z-")) / 4

        η_yx = (free("y+", "x+") - free("y+", "x-") - free("y-", "x+") + free("y-", "x-")) / 4
        η_yy = (free("y+", "y+") - free("y+", "y-") - free("y-", "y+") + free("y-", "y-")) / 4
        η_yz = (free("y+", "z+") - free("y+", "z-") - free("y-", "z+") + free("y-", "z-")) / 4

        η_zx = (free("z+", "x+") - free("z+", "x-") - free("z-", "x+") + free("z-", "x-")) / 4
        η_zy = (free("z+", "y+") - free("z+", "y-") - free("z-", "y+") + free("z-", "y-")) / 4
        η_zz = (free("z+", "z+") - free("z+", "z-") - free("z-", "z+") + free("z-", "z-")) / 4

        η = np.array([[η_xx, η_xy, η_xz], [η_yx, η_yy, η_yz], [η_zx, η_zy, η_zz]])

        ic(μ)
        ic(η)
        # μ = df[]
        # print(δ)
        # print(df)
        # print(free("x+", "x+"))

        # E_fm = float(df[(df.s1 == "z+") & (df.s2 == "z+") & (df.sep == sep)].E)
        # E_afm = float(df[(df.s1 == "z+") & (df.s2 == "z-") & (df.sep == sep)].E)

        # x.append(sep)
        # y.append(E_fm - E_afm)

    # plt.plot(x, y, ".")
    # plt.show()


if __name__ == "__main__":
    run(main)
