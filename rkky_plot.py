#!/usr/bin/env python

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from icecream import ic
from typer import run

# np.set_printoptions(precision=12, floatmode="fixednu")

np.set_printoptions(formatter={"float": "{: 0.12f}".format})


def main(filename: str):
    """Plot the results generated by RKKY calculations."""

    raw = pd.read_csv(filename, names=["s1", "s2", "sep", "E"], skipinitialspace=True)
    raw = raw.sort_values(by=["sep", "s1", "s2"])
    ic(raw)

    xs = []
    ys = []
    for δ, df in raw.groupby("sep"):

        def free(s1, s2):
            try:
                return float(df[(df["s1"] == s1) & (df["s2"] == s2)].E)
            except:
                return np.nan

        μ1_x = (
            0
            + free("x+", "x+")
            + free("x+", "x-")
            + free("x+", "y+")
            + free("x+", "y-")
            + free("x+", "z+")
            + free("x+", "z-")
            - free("x-", "x+")
            - free("x-", "x-")
            - free("x-", "y+")
            - free("x-", "y-")
            - free("x-", "z+")
            - free("x-", "z-")
        ) / 12

        μ1_y = (
            0
            + free("y+", "x+")
            + free("y+", "x-")
            + free("y+", "y+")
            + free("y+", "y-")
            + free("y+", "z+")
            + free("y+", "z-")
            - free("y-", "x+")
            - free("y-", "x-")
            - free("y-", "y+")
            - free("y-", "y-")
            - free("y-", "z+")
            - free("y-", "z-")
        ) / 12

        μ1_z = (
            0
            + free("z+", "x+")
            + free("z+", "x-")
            + free("z+", "y+")
            + free("z+", "y-")
            + free("z+", "z+")
            + free("z+", "z-")
            - free("z-", "x+")
            - free("z-", "x-")
            - free("z-", "y+")
            - free("z-", "y-")
            - free("z-", "z+")
            - free("z-", "z-")
        ) / 12

        μ1 = np.array([μ1_x, μ1_y, μ1_z])

        μ2_x = (
            0
            + free("x+", "x+")
            + free("x-", "x+")
            + free("y+", "x+")
            + free("y-", "x+")
            + free("z+", "x+")
            + free("z-", "x+")
            - free("x+", "x-")
            - free("x-", "x-")
            - free("y+", "x-")
            - free("y-", "x-")
            - free("z+", "x-")
            - free("z-", "x-")
        ) / 12

        μ2_y = (
            0
            + free("x+", "y+")
            + free("x-", "y+")
            + free("y+", "y+")
            + free("y-", "y+")
            + free("z+", "y+")
            + free("z-", "y+")
            - free("x+", "y-")
            - free("x-", "y-")
            - free("y+", "y-")
            - free("y-", "y-")
            - free("z+", "y-")
            - free("z-", "y-")
        ) / 12

        μ2_z = (
            0
            + free("x+", "z+")
            + free("x-", "z+")
            + free("y+", "z+")
            + free("y-", "z+")
            + free("z+", "z+")
            + free("z-", "z+")
            - free("x+", "z-")
            - free("x-", "z-")
            - free("y+", "z-")
            - free("y-", "z-")
            - free("z+", "z-")
            - free("z-", "z-")
        ) / 12

        μ2 = np.array([μ2_x, μ2_y, μ2_z])

        η_xx = (free("x+", "x+") - free("x+", "x-") - free("x-", "x+") + free("x-", "x-")) / 4
        η_xy = (free("x+", "y+") - free("x+", "y-") - free("x-", "y+") + free("x-", "y-")) / 4
        η_xz = (free("x+", "z+") - free("x+", "z-") - free("x-", "z+") + free("x-", "z-")) / 4

        η_yx = (free("y+", "x+") - free("y+", "x-") - free("y-", "x+") + free("y-", "x-")) / 4
        η_yy = (free("y+", "y+") - free("y+", "y-") - free("y-", "y+") + free("y-", "y-")) / 4
        η_yz = (free("y+", "z+") - free("y+", "z-") - free("y-", "z+") + free("y-", "z-")) / 4

        η_zx = (free("z+", "x+") - free("z+", "x-") - free("z-", "x+") + free("z-", "x-")) / 4
        η_zy = (free("z+", "y+") - free("z+", "y-") - free("z-", "y+") + free("z-", "y-")) / 4
        η_zz = (free("z+", "z+") - free("z+", "z-") - free("z-", "z+") + free("z-", "z-")) / 4

        η = np.array([[η_xx, η_xy, η_xz], [η_yx, η_yy, η_yz], [η_zx, η_zy, η_zz]])

        ic(δ, μ1, μ2, η)

        xs.append(δ)
        ys.append((η_xx + η_yy + η_zz) / 3)

    plt.plot(xs, ys, "-")
    plt.xlabel(r"Separation $δ/a$")
    plt.ylabel(r"RKKY interaction $J_{eff}$")
    plt.grid()
    plt.ylim([-0.015, 0.015])
    plt.show()


if __name__ == "__main__":
    run(main)
